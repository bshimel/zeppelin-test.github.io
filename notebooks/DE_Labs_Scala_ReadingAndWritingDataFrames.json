{"paragraphs":[{"text":"%md\n# About This Lab\n**Objective:**  Being able to read and write DataFrames using various data sources\n**File locations:** s3://shared-edu/dev/\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Working with DataFrames\n\nCopyright © 2010–2021 Cloudera. All rights reserved.\nNot to be reproduced or shared without prior written consent from Cloudera.\n\n---","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:07+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541825_-538684353","id":"20171105-200834_1116095891","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:06:07+0000","dateFinished":"2022-03-10T17:06:07+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:14032"},{"text":"%md\n## Overview\n\nIn this module we introduce the DataFrameReader and DataFrameWriter classes and demonstrate how to read from and write to a number of data sources.\n\n\n### Reading and Writing Data\n\n* Spark can read from and write to a variety of data sources.\n\n* The Spark SQL `DataFrameReader` and `DataFrameWriter` classes support the following data sources:\n    * text\n    * delimited text\n    * JSON (JavaScript Object Notation)\n    * Apache Parquet\n    * Apache ORC\n    * Apache Hive\n    * JDBC connection\n\n* Spark SQL also integrates with the pandas Python package.\n\n* Additional data sources are supported by [third-party packages](https://spark-packages.org/).\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:08+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541826_-678490803","id":"20210609-151811_483328801","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:06:08+0000","dateFinished":"2022-03-10T17:06:08+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14033"},{"text":"%md\n# Setup\n---","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:08+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541826_-1881767845","id":"20181114-164229_902436001","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:06:14+0000","dateFinished":"2022-03-10T17:06:14+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14034"},{"title":"Required for Kerberos operations","text":"%sh\n\necho $PASS | kinit $USER","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929760981_1108722478","id":"20220310-162920_1925211424","dateCreated":"2022-03-10T16:29:20+0000","dateStarted":"2022-03-10T17:06:15+0000","dateFinished":"2022-03-10T17:06:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14035"},{"title":"Setup the data context","text":"%sh\n\nrm -rf data\nmkdir -p data\naws s3 cp --recursive s3://shared-edu/sci/duocar/raw data/raw\naws s3 cp --recursive s3://shared-edu/sci/duocar/earcloud/apache_logs data/earcloud\nhdfs dfs -mkdir -p duocar\nhdfs dfs -put -f data duocar","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929962804_309034768","id":"20220310-163242_881327782","dateCreated":"2022-03-10T16:32:42+0000","dateStarted":"2022-03-10T17:06:22+0000","dateFinished":"2022-03-10T17:06:34+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14036"},{"text":"%md\n\n### Create a TPCDS queries ready database\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541827_88809424","id":"20210609-165342_896874142","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:06:35+0000","dateFinished":"2022-03-10T17:06:35+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14037"},{"title":"Retrieve the data from S3","text":"%sh\n\naws s3 cp s3://shared-edu/dev/tpcds/customer.dat data/tpcds/raw/customer.dat\nhdfs dfs -mkdir -p data/tpcds/raw/customer\nhdfs dfs -put -f data/tpcds/raw/customer.dat data/tpcds/raw/customer","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:35+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541827_-818880466","id":"20210609-165503_1268319468","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:06:45+0000","dateFinished":"2022-03-10T17:06:50+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14038"},{"title":"Create the database","text":"%pyspark\n\nspark.sql(\"CREATE DATABASE IF NOT EXISTS tpcds\")\nspark.sql(\"USE tpcds\")\nspark.sql(\"CREATE EXTERNAL TABLE IF NOT EXISTS  customer_raw (          \\\n                                        c_customer_sk bigint,           \\\n                                        c_customer_id string,           \\\n                                        c_current_cdemo_sk bigint,      \\\n                                        c_current_hdemo_sk bigint,      \\\n                                        c_current_addr_sk bigint,       \\\n                                        c_first_shipto_date_sk bigint,  \\\n                                        c_first_sales_date_sk bigint,   \\\n                                        c_salutation string,            \\\n                                        c_first_name string,            \\\n                                        c_last_name string,             \\\n                                        c_preferred_cust_flag string,   \\\n                                        c_birth_day int,                \\\n                                        c_birth_month int,              \\\n                                        c_birth_year int,               \\\n                                        c_birth_country string,         \\\n                                        c_login string,                 \\\n                                        c_email_address string,         \\\n                                        c_last_review_date string)      \\\nROW FORMAT DELIMITED                                                    \\\nFIELDS TERMINATED BY '|'                                                \\\nSTORED AS TEXTFILE                                                      \\\nLOCATION 'data/tpcds/raw/customer'\")\nspark.sql(\"CREATE EXTERNAL TABLE IF NOT EXISTS customer STORED AS PARQUET LOCATION 'data/tpcds/customer' AS SELECT * FROM customer_raw\")\nspark.sql(\"DROP TABLE customer_raw\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:06:50+0000","config":{"tableHide":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{}},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541828_-1528034472","id":"20210609-165715_293593751","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:02+0000","dateFinished":"2022-03-10T17:07:03+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14039"},{"title":"Delete the raw files","text":"%sh\n\nrm -rf data/tpcds/raw\nhdfs dfs -rm -r -f -skipTrash data/tpcds/raw","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:03+0000","config":{"tableHide":true,"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541828_642398522","id":"20210623-165533_1964082791","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:04+0000","dateFinished":"2022-03-10T17:07:05+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14040"},{"text":"%md\n# Lesson\n---","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:05+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541828_-297439870","id":"20210609-150445_381117564","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:15+0000","dateFinished":"2022-03-10T17:07:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14041"},{"text":"%md\n## Working with delimited text files","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:16+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541828_-699744792","id":"20210609-152831_1784339873","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:16+0000","dateFinished":"2022-03-10T17:07:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14042"},{"title":"Use the csv method of the DataFrameReader class to read a delimited text file","text":"%spark\n\nval riders = spark.read.option(\"header\",\"true\").option(\"inferSchema\",\"true\").option(\"sep\",\",\").csv(\"duocar/data/raw/riders/\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:17+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541828_-8047981","id":"20210609-153441_1456195471","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:29+0000","dateFinished":"2022-03-10T17:07:30+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14043"},{"title":"The `csv` method is a convenience method for the following more general syntax","text":"%spark\n\nval riders = (spark\n                   .read\n                   .format(\"csv\")\n                   .option(\"sep\", \",\")\n                   .option(\"header\", \"true\")\n                   .option(\"inferSchema\", \"true\")\n                   .load(\"duocar/data/raw/riders/\"))","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:30+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541828_1959563800","id":"20210609-154226_1306323343","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:32+0000","dateFinished":"2022-03-10T17:07:33+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14044"},{"title":"Note","text":"%md\nIf you use either syntax with `header` set to `True`, then Spark assumes that *every* file in the directory has a header row.","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:33+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541828_-1057325672","id":"20210609-154323_855522577","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:39+0000","dateFinished":"2022-03-10T17:07:39+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14045"},{"title":"Spark does its best to infer the schema from the header row and column values","text":"%spark\n\nriders.printSchema()","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:39+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541829_-1970251643","id":"20210609-154615_374120342","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:40+0000","dateFinished":"2022-03-10T17:07:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14046"},{"title":"Alternatively, you can manually specify the schema","text":"%spark\n\n// First, import the Spark SQL types\nimport org.apache.spark.sql.types._\n\n// Then specify the schema as a `StructType` instance: \nval schema = StructType(Array(\n    StructField(\"id\", StringType, true),\n    StructField(\"birth_date\", DateType, true),\n    StructField(\"join_date\", DateType, true),\n    StructField(\"first_name\", StringType, true),\n    StructField(\"last_name\", StringType, true),\n    StructField(\"gender\", StringType, true),\n    StructField(\"ethnicity\", StringType, true),\n    StructField(\"student\", IntegerType, true),\n    StructField(\"home_block\", StringType, true),\n    StructField(\"home_lat\", DoubleType, true),\n    StructField(\"home_lon\", DoubleType, true),\n    StructField(\"work_lat\", DoubleType, true),\n    StructField(\"work_lon\", DoubleType, true)\n))\n\n// Finally, pass the schema to the `DataFrameReader`:\nval riders2 = (spark\n               .read\n               .format(\"csv\")\n               .option(\"sep\", \",\")\n               .option(\"header\", \"true\")\n               .schema(schema)\n               .load(\"duocar/data/raw/riders/\"))\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:41+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541829_1128190374","id":"20210609-154820_1593481131","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:47+0000","dateFinished":"2022-03-10T17:07:48+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14047"},{"title":"Note","text":"%md\nWe must include the header option otherwise Spark will read the header row as a valid record.","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:48+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541829_1242129810","id":"20210609-154940_1680521456","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:49+0000","dateFinished":"2022-03-10T17:07:49+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14048"},{"title":"Confirm the explicit schema","text":"%spark\n\nriders2.printSchema()","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:49+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541829_853930351","id":"20210609-155035_973331561","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:07:54+0000","dateFinished":"2022-03-10T17:07:55+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14049"},{"title":"Use the `csv` method of the class to write the DataFrame to a tab-delimited file","text":"%spark\n\nriders2.write.mode(\"overwrite\").option(\"sep\",\"\\t\").csv(\"data/riders_tsv/\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:07:55+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541829_1880067877","id":"20210609-155232_1455262499","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:03+0000","dateFinished":"2022-03-10T17:08:04+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14050"},{"title":"Check the result","text":"%sh\n\nhdfs dfs -ls data/riders_tsv","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:04+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541829_-908742517","id":"20210609-155322_1744544361","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:05+0000","dateFinished":"2022-03-10T17:08:07+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14051"},{"title":"Note","text":"%md\nThe file has a `csv` extension even though it includes tab-separated values.  Never trust a file extension!","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:07+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541829_657308380","id":"20210609-155628_1507143108","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:10+0000","dateFinished":"2022-03-10T17:08:10+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14052"},{"title":" Use the `mode` and the `compression` arguments","text":"%spark\n\n// Use the `mode` argument to overwrite existing files and the `compression` argument to specify a compression codec:\n\nriders2.write.mode(\"overwrite\").option(\"sep\",\"\\t\").option(\"compression\",\"bzip2\").csv(\"data/riders_tsv_compressed/\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:11+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541830_2055904167","id":"20210609-155928_1435158289","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:16+0000","dateFinished":"2022-03-10T17:08:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14053"},{"title":"Check the result","text":"%sh\n\nhdfs dfs -ls data/riders_tsv_compressed","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:18+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541830_-1076204389","id":"20210609-160147_1462300286","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:19+0000","dateFinished":"2022-03-10T17:08:20+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14054"},{"text":"%md\nSee the Cloudera documentation on [Data Compression](https://docs.cloudera.com/documentation/enterprise/latest/topics/introduction_compression.html) for more details.\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:20+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541830_150177158","id":"20210609-160243_332871775","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:27+0000","dateFinished":"2022-03-10T17:08:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14055"},{"text":"%md\n## Working with text files","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:27+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541830_939319008","id":"20210609-160516_1950213761","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:34+0000","dateFinished":"2022-03-10T17:08:34+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14056"},{"title":"Use the text method of the `DataFrameReader` class to read an unstructured text file","text":"%spark\n\nval weblogs = spark.read.text(\"duocar/data/earcloud\")\nweblogs.printSchema()\nweblogs.head(5)","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:34+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541830_1754197032","id":"20210609-160629_141629386","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:35+0000","dateFinished":"2022-03-10T17:08:36+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14057"},{"title":"Parse the unstructured data","text":"%spark\n\nimport org.apache.spark.sql.functions.regexp_extract\nval requests = weblogs.select(regexp_extract($\"value\", \"^.*\\\"(GET.*?)\\\".*$\", 1).alias(\"request\")) \nrequests.head(5)","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541830_-167692641","id":"20210609-161007_912063479","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:37+0000","dateFinished":"2022-03-10T17:08:38+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14058"},{"title":"Use the text method of the `DataFrameWriter` class to write an unstructured text file","text":"%spark\n\nrequests.write.mode(\"overwrite\").text(\"data/requests_txt/\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:38+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541831_525979882","id":"20210609-161139_1151511846","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:39+0000","dateFinished":"2022-03-10T17:08:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14059"},{"title":"Check the result","text":"%sh\n\nhdfs dfs -ls data/requests_txt","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:41+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541831_845652472","id":"20210609-161242_1353501972","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:42+0000","dateFinished":"2022-03-10T17:08:44+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14060"},{"text":"%md\n## Working with Parquet files\n\n[Parquet](https://parquet.apache.org/) is a very popular columnar storage format for Hadoop.  Parquet is the default file format in Spark SQL. \n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541831_-365560971","id":"20210609-161334_1576801537","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:47+0000","dateFinished":"2022-03-10T17:08:47+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14061"},{"title":"Use the `parquet` method of the `DataFrameWriter` class to write to a Parquet file","text":"%spark\n\nriders2.write.mode(\"overwrite\").parquet(\"data/riders_parquet/\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:47+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541831_-1377016191","id":"20210609-161334_1420031098","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:08:54+0000","dateFinished":"2022-03-10T17:08:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14062"},{"title":"Check the result","text":"%sh\n\nhdfs dfs -ls data/riders_parquet","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:08:56+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541831_354676295","id":"20210609-161607_837200411","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:02+0000","dateFinished":"2022-03-10T17:09:04+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14063"},{"title":"Use the `parquet` method of the `DataFrameReader` class to the read from a Parquet file","text":"%spark\n\nspark.read.parquet(\"data/riders_parquet/\").printSchema()\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:04+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541831_-891300998","id":"20210609-161710_1555733073","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:05+0000","dateFinished":"2022-03-10T17:09:06+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14064"},{"title":"Note","text":"%md\n\nSpark uses the schema stored with the data.","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:06+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541832_194384381","id":"20210609-161829_1127198474","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:07+0000","dateFinished":"2022-03-10T17:09:07+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14065"},{"text":"%md\n## Working with Hive Tables","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:07+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541832_-1607190868","id":"20210609-162003_731372182","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:07+0000","dateFinished":"2022-03-10T17:09:07+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14066"},{"title":"Use the `sql` method of the `SparkSession` class to run Hive queries","text":"%spark\n\nspark.sql(\"SHOW DATABASES\").show()\nspark.sql(\"USE tpcds\")\nspark.sql(\"SHOW TABLES\").show()\nspark.sql(\"DESCRIBE customer\").show()\nspark.sql(\"SELECT * FROM customer LIMIT 10\").show()","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541832_1110274482","id":"20210609-162024_30882356","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:14+0000","dateFinished":"2022-03-10T17:09:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14067"},{"title":"Alternatively use the %sql magic","text":"%sql\n\nSELECT * FROM customer LIMIT 10","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:15+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"c_customer_sk":"string","c_customer_id":"string","c_current_cdemo_sk":"string","c_current_hdemo_sk":"string","c_current_addr_sk":"string","c_first_shipto_date_sk":"string","c_first_sales_date_sk":"string","c_salutation":"string","c_first_name":"string","c_last_name":"string","c_preferred_cust_flag":"string","c_birth_day":"string","c_birth_month":"string","c_birth_year":"string","c_birth_country":"string","c_login":"string","c_email_address":"string","c_last_review_date":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541832_-1111878430","id":"20210609-162732_2037019500","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:16+0000","dateFinished":"2022-03-10T17:09:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14068"},{"title":"Use the `table` method of the `DataFrameReader` class to read a Hive table","text":"%spark\n\nval customers_table = spark.read.table(\"customer\")\ncustomers_table.printSchema()\ncustomers_table.show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:17+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541832_1644477126","id":"20210609-162858_466536451","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:23+0000","dateFinished":"2022-03-10T17:09:24+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14069"},{"title":"Use the `saveAsTable` method of the `DataFrameWriter` class to write a Hive table","text":"%spark\n\nval table_name = \"savedCustomers\" \nriders.write.saveAsTable(table_name)\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:24+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541832_-1396226535","id":"20210609-163201_970833906","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:35+0000","dateFinished":"2022-03-10T17:09:37+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14070"},{"title":"You can now manipulate this table with Hive or Impala or via Spark SQL","text":"%spark\n\nspark.sql(\"DESCRIBE \" + table_name).show()","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541832_-172182156","id":"20210609-163400_215352433","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:38+0000","dateFinished":"2022-03-10T17:09:39+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14071"},{"title":"Drop the Hive table","text":"%spark\n\nspark.sql(\"DROP TABLE IF EXISTS \" + table_name)","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:39+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541833_642096436","id":"20210609-171327_937714834","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:42+0000","dateFinished":"2022-03-10T17:09:44+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14072"},{"text":"%md\n## Working with object stores\n\nPass the appropriate prefix and path to the DataFrameReader and DataFrameWriter methods to read from and write to an object store.\nFor example, use the prefix `s3a` and pass the S3 bucket to read from Amazon S3","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:44+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541833_-969387125","id":"20210609-170645_791175547","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:48+0000","dateFinished":"2022-03-10T17:09:48+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14073"},{"title":"Read the demographics data from S3","text":"%spark\n\nval demographics = (spark.read\n                        .option(\"sep\", \",\")\n                        .option(\"header\", \"true\")\n                        .option(\"inferSchema\", \"true\").csv(\"s3a://duocar/raw/demographics/\"))\ndemographics.printSchema()\ndemographics.show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:48+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541833_1366824303","id":"20210609-170611_727820162","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:09:52+0000","dateFinished":"2022-03-10T17:09:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14074"},{"text":"%md\n\nIf we have write permissions, then we can also write files to Amazon S3 using the `s3a` prefix.\n\n**Important:** This code will fail when running Spark via YARN unless the worker nodes have access to the appropriate AWS credentials. \nSee the documentation for your distribution of Hadoop for more details on accessing cloud storage.","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:09:59+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541833_-591377626","id":"20210609-170941_667947593","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:00+0000","dateFinished":"2022-03-10T17:10:00+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14075"},{"text":"%md\n# Lab\n---","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:00+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541833_767596526","id":"20210609-150527_79851234","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:01+0000","dateFinished":"2022-03-10T17:10:01+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14076"},{"title":"1 - Use the `json` method of the `DataFrameWriter` class to write the `riders` DataFrame to the `data/riders_json/` (HDFS) directory","text":"%spark\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:01+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541833_-2003789396","id":"20210609-173454_1651083216","dateCreated":"2022-03-10T16:25:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14077"},{"title":"2 - Use the `hdfs dfs -ls` command to list the contents of the # `data/riders_json/` directory","text":"%sh\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:07+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541834_-1989431259","id":"20210609-173659_1475298016","dateCreated":"2022-03-10T16:25:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14078"},{"title":"3 - Use the `hdfs dfs -cat` and `head` commands to display a JSON file in the `data/riders_json` directory","text":"%sh\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:08+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541834_2059841408","id":"20210609-173824_2005143782","dateCreated":"2022-03-10T16:25:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14079"},{"title":"4 - Use the `json` method of the `DataFrameReader` class to read the JSON # file into a DataFrame","text":"%spark\n\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541834_-1806611737","id":"20210609-174022_1820082099","dateCreated":"2022-03-10T16:25:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14080"},{"title":"5 - Examine the schema of the DataFrame.  Do you notice anything different?","text":"%spark\n\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:09+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541834_1478611680","id":"20210609-173527_734539001","dateCreated":"2022-03-10T16:25:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14081"},{"text":"%md\n# Result\n**You have now:**  Learned to read and write DataFrames using various data sources\n\n---","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:09+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541834_1179483981","id":"20181119-142716_792318228","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:15+0000","dateFinished":"2022-03-10T17:10:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14082"},{"text":"%md\n# Solution\n---","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:15+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541834_-1516867294","id":"20171113-155535_1769142099","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:16+0000","dateFinished":"2022-03-10T17:10:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14083"},{"title":"1 - Use the `json` method of the `DataFrameWriter` class to write the `riders` DataFrame to the `data/riders_json/` (HDFS) directory","text":"%spark\n\nriders.write.mode(\"overwrite\").json(\"data/riders_json/\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:16+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541835_1637247726","id":"20210609-175042_1104563858","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:17+0000","dateFinished":"2022-03-10T17:10:18+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14084"},{"title":"2 - Use the `hdfs dfs -ls` command to list the contents of the # `data/riders_json/` directory","text":"%sh\n\nhdfs dfs -ls data/riders_json","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:18+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541835_-1842393676","id":"20210609-175053_1690034821","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:24+0000","dateFinished":"2022-03-10T17:10:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14085"},{"title":"3 - Use the `hdfs dfs -cat` and `head` commands to display a JSON file in the `data/riders_json` directory","text":"%sh\n\nhdfs dfs -cat data/riders_json/part* | head -n 5","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:26+0000","config":{"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/sh","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541835_-1699138090","id":"20210609-175104_2060461537","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:30+0000","dateFinished":"2022-03-10T17:10:31+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14086"},{"title":"4 - Use the `json` method of the `DataFrameReader` class to read the JSON file into a DataFrame","text":"%spark\n\nval riders_json = spark.read.json(\"data/riders_json/\")","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541835_1867001343","id":"20210609-175115_844478994","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:43+0000","dateFinished":"2022-03-10T17:10:44+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14087"},{"title":"5 - Examine the schema of the DataFrame.  Do you notice anything different?","text":"%spark\n\nriders_json.printSchema() // Note that the columns are in alphabetical order","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:10:44+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541835_1918207951","id":"20210609-175125_615219886","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:10:46+0000","dateFinished":"2022-03-10T17:10:47+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14088"},{"title":"References","text":"%md\n\n[Spark Scala API - org.apache.spark.DataFrameReader and DataFrameWriter class](https://spark.apache.org/docs/latest/api/scala/org/apache/spark/sql/index.html)","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:15:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541836_-715797547","id":"20210609-174146_285537342","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:15:19+0000","dateFinished":"2022-03-10T17:15:19+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14089"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:11:01+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541836_1556995416","id":"20181116-135131_93712280","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:11:08+0000","dateFinished":"2022-03-10T17:11:08+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14090"},{"text":"%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera University\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:11:08+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541836_1816948701","id":"20200110-154537_1406191376","dateCreated":"2022-03-10T16:25:41+0000","dateStarted":"2022-03-10T17:11:09+0000","dateFinished":"2022-03-10T17:11:09+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14091"},{"text":"%angular\n","user":"freynalddeveuwest1","dateUpdated":"2022-03-10T17:11:09+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1646929541836_1414676022","id":"20200110-162013_302547143","dateCreated":"2022-03-10T16:25:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14092"}],"name":"DE/Labs/Scala/ReadingAndWritingDataFrames","id":"2GZ9SYSVQ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"sh:shared_process":[],"jdbc:shared_process":[],"livy:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}