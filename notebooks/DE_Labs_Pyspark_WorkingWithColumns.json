{"paragraphs":[{"text":"%md\n# About This Lab\n**Objective:** Become familiar with DataFrame columns transformations\n**File locations:** s3://shared-edu/sci/\n**Successful outcome:**\n**Before you begin:**\n**Related lessons:** Working with DataFrames\n\nCopyright © 2010–2021 Cloudera. All rights reserved.\nNot to be reproduced or shared without prior written consent from Cloudera.\n\n---","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:45:45+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526200_-1602756529","id":"20171105-200834_1116095891","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:45:45+0000","dateFinished":"2022-01-24T15:45:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:109310"},{"text":"%md\n## Overview\n\nSpark SQL supports various column types and provides a variety of functions and Column methods that can be applied to each type. \nIn this module we demonstrate how to transform DataFrame columns of various types.\n\n* Working with numerical columns\n* Working with string columns\n* Working with datetime columns\n* Working with Boolean columns\n\n\n## Spark SQL Data Types\n\n* Spark SQL data types are defined in the `pyspark.sql.types` module\n\n* Spark SQL supports the following basic data types:\n    * NullType\n    * StringType\n    * Byte array data type\n        * BinaryType\n    * BooleanType\n    * Integer data types\n        * ByteType\n        * ShortType\n        * IntegerType\n        * LongType\n    * Fixed-point data type\n        * DecimalType\n    * Floating-point data types\n        * FloatType\n        * DoubleType\n    * Date and time data types\n        * DateType\n        * TimestampType\n\n* Spark also supports the following complex (collection) types:\n    * ArrayType\n    * MapType\n    * StructType\n\n* Spark SQL provides various methods and functions that can be applied to the various data types","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:37+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526202_1761584549","id":"20210609-184255_683450783","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:38+0000","dateFinished":"2022-01-24T15:41:38+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109311"},{"text":"%md\n# Setup\n---","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:38+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526202_1161632804","id":"20181114-164229_902436001","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:39+0000","dateFinished":"2022-01-24T15:41:39+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109312"},{"title":"Required for Kerberos operations","text":"%sh\n\necho $PASS | kinit $USER\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:46:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh","title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038621483_846574563","id":"20220124-153701_797441556","dateCreated":"2022-01-24T15:37:01+0000","dateStarted":"2022-01-24T15:41:40+0000","dateFinished":"2022-01-24T15:41:40+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109313"},{"title":"Setup the data context","text":"%sh\n\nrm -rf data\nmkdir -p data\naws s3 cp --recursive s3://shared-edu/sci/duocar/raw data/raw\nhdfs dfs -mkdir -p duocar\nhdfs dfs -put -f data duocar","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:46:38+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038659675_-2079531888","id":"20220124-153739_1090067886","dateCreated":"2022-01-24T15:37:39+0000","dateStarted":"2022-01-24T15:41:41+0000","dateFinished":"2022-01-24T15:41:50+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109314"},{"title":"Read the raw data from HDFS","text":"%pyspark\n\nrides = spark.read.csv(\"duocar/raw/rides/\", header=True, inferSchema=True)\ndrivers = spark.read.csv(\"duocar/raw/drivers/\", header=True, inferSchema=True)\nriders = spark.read.csv(\"duocar/raw/riders/\", header=True, inferSchema=True)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:50+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526203_-381673183","id":"20210609-185436_1594555073","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:51+0000","dateFinished":"2022-01-24T15:41:52+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109315"},{"text":"%md\n# Lesson\n---","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:52+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526203_805773277","id":"20210609-150445_381117564","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:53+0000","dateFinished":"2022-01-24T15:41:53+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109316"},{"text":"%md\n## Working with numerical columns","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526205_-271015765","id":"20210609-185536_2039642717","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:54+0000","dateFinished":"2022-01-24T15:41:54+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109317"},{"title":"Example 1: Converting ride distance from meters to miles","text":"%pyspark\n\nfrom pyspark.sql.functions import col, round\nrides \\\n  .select(\"distance\", round(col(\"distance\") / 1609.344, 2).alias(\"distance_in_miles\")) \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:54+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526205_-1671238201","id":"20210609-185831_522948905","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:55+0000","dateFinished":"2022-01-24T15:41:56+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109318"},{"title":"Notes","text":"%md\n* We have used the fact that 1 mile = 1609.344 meters.\n* We have used the `round` function to round the result to two decimal places.\n* We have used the `alias` method to rename the column.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:56+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526206_119854932","id":"20210609-185930_1633043121","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:57+0000","dateFinished":"2022-01-24T15:41:57+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109319"},{"title":"To add a new column, use the `withColumn` method with a new column name","text":"%pyspark\n\nrides \\\n  .withColumn(\"distance_in_miles\", round(col(\"distance\") / 1609.344, 2)) \\\n  .printSchema()","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:57+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526207_-2049134054","id":"20210609-190109_437353810","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:41:58+0000","dateFinished":"2022-01-24T15:41:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109320"},{"title":"To replace an existing column, use the `withColumn` method with an existing column name","text":"%pyspark\n\nrides \\\n  .withColumn(\"distance\", round(col(\"distance\") / 1609.344, 2)) \\\n  .printSchema()","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:41:59+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526207_500162357","id":"20210609-190200_1937006490","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:00+0000","dateFinished":"2022-01-24T15:42:01+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109321"},{"title":"Example 2: Converting the ride id from an integer to a string","text":"%pyspark\n\n# Use the `format_string` function to convert `id` to a left-zero-padded string:\nfrom pyspark.sql.functions import format_string\nrides \\\n  .withColumn(\"id_fixed\", format_string(\"%010d\", \"id\")) \\\n  .select(\"id\", \"id_fixed\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:01+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526208_-902278567","id":"20210609-190422_564835181","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:02+0000","dateFinished":"2022-01-24T15:42:03+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109322"},{"title":"Note","text":"%md\nWe have used the [printf format string](https://en.wikipedia.org/wiki/Printf_format_string) `%010d` to achieve the desired format.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:03+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526209_1660631815","id":"20210609-190521_549067163","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:04+0000","dateFinished":"2022-01-24T15:42:04+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109323"},{"title":"Example 3: Converting the student flag from an integer to a Boolean using a Boolean expression","text":"%pyspark\n\nriders \\\n  .withColumn(\"student_boolean\", col(\"student\") == 1) \\\n  .select(\"student\", \"student_boolean\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:04+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526209_43405386","id":"20210609-190736_205381703","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:05+0000","dateFinished":"2022-01-24T15:42:06+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109324"},{"title":"Or using the `cast` method","text":"%pyspark\n\nriders \\\n  .withColumn(\"student_boolean\", col(\"student\").cast(\"boolean\")) \\\n  .select(\"student\", \"student_boolean\") \\\n  .show(5)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:06+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526210_-139578109","id":"20210609-190628_1784644919","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:08+0000","dateFinished":"2022-01-24T15:42:09+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109325"},{"text":"%md\n## Working with string columns","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:09+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526211_597216896","id":"20210609-192125_920536293","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:10+0000","dateFinished":"2022-01-24T15:42:10+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109326"},{"title":"Example 4: Normalizing a string column","text":"%pyspark\n\n# Use the `trim` and `upper` functions to normalize `riders.sex`:\nfrom pyspark.sql.functions import trim, upper\nriders \\\n  .withColumn(\"gender\", upper(trim(col(\"sex\")))) \\\n  .select(\"sex\", \"gender\") \\\n  .show(5)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:10+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526211_-1767151080","id":"20210609-192110_168026378","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:11+0000","dateFinished":"2022-01-24T15:42:12+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109327"},{"title":"Example 5: Extracting a substring from a string column","text":"%pyspark\n\nfrom pyspark.sql.functions import substring\nriders \\\n  .withColumn(\"home_block_group\", substring(\"home_block\", 1, 12)) \\\n  .select(\"home_block\", \"home_block_group\") \\\n  .show(5)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:12+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526212_1106203798","id":"20210609-192230_933722525","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:13+0000","dateFinished":"2022-01-24T15:42:14+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109328"},{"title":"Note","text":"%md\nThe [Census Block Group](https://en.wikipedia.org/wiki/Census_block_group) is the first 12 digits of the [Census Block](https://en.wikipedia.org/wiki/Census_block).  Use the `substring` function to extract the Census Block Group from `riders.home_block`.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526213_-629156635","id":"20210609-192339_312665207","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:15+0000","dateFinished":"2022-01-24T15:42:15+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109329"},{"title":"Example 6: Extracting a substring using a regular expression","text":"%pyspark\n\n# Use the `regexp_extract` function to extract the Census Block Group via a regular expression\nfrom pyspark.sql.functions import regexp_extract\nriders \\\n  .withColumn(\"home_block_group\", regexp_extract(\"home_block\", \"^(\\d{12}).*\", 1)) \\\n  .select(\"home_block\", \"home_block_group\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:15+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526213_-188269297","id":"20210609-192628_225892854","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:16+0000","dateFinished":"2022-01-24T15:42:17+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109330"},{"title":"Note","text":"%md\nThe third argument to `regexp_extract` is the capture group.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:17+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526214_-1405979361","id":"20210609-192547_964098622","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:18+0000","dateFinished":"2022-01-24T15:42:18+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109331"},{"text":"%md\n## Working with date and timestamp columns","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:18+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526215_-4394789","id":"20210609-192907_81354757","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:19+0000","dateFinished":"2022-01-24T15:42:19+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109332"},{"title":"Example 7: Converting a timestamp to a date","text":"%pyspark\n\n# Note that `riders.birth_date` and `riders.start_date` were read in as timestamps:\nriders.select(\"birth_date\", \"start_date\").show(5)\n\n# Use the `cast` method to convert `riders.birth_date` to a date:\nriders \\\n  .withColumn(\"birth_date_fixed\", col(\"birth_date\").cast(\"date\")) \\\n  .select(\"birth_date\", \"birth_date_fixed\") \\\n  .show(5)\n\n# Alternatively, use the `to_date` function:\nfrom pyspark.sql.functions import to_date\nriders \\\n  .withColumn(\"birth_date_fixed\", to_date(\"birth_date\")) \\\n  .select(\"birth_date\", \"birth_date_fixed\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:19+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526216_-1958214757","id":"20210609-193157_1228003521","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:20+0000","dateFinished":"2022-01-24T15:42:21+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109333"},{"title":"Example 8: Converting a string to a timestamp","text":"%pyspark\n\n# Note that `rides.date_time` was read in as a string:\nrides.printSchema()\n\n# Use the `cast` method to convert it to a timestamp:\nrides \\\n  .withColumn(\"date_time_fixed\", col(\"date_time\").cast(\"timestamp\")) \\\n  .select(\"date_time\", \"date_time_fixed\") \\\n  .show(5)\n\n# Alternatively, use the `to_timestamp` function:\nfrom pyspark.sql.functions import to_timestamp\nrides \\\n  .withColumn(\"date_time_fixed\", to_timestamp(\"date_time\", format=\"yyyy-MM-dd HH:mm\")) \\\n  .select(\"date_time\", \"date_time_fixed\") \\\n  .show(5)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:21+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526217_427963582","id":"20210609-193255_1861849609","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:22+0000","dateFinished":"2022-01-24T15:42:23+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109334"},{"title":"Example 9: Computing the age of each rider","text":"%pyspark\n\n# Use the `current_date` and `months_between` functions to compute the age of each rider:\nfrom pyspark.sql.functions import current_date, months_between, floor\nriders \\\n  .withColumn(\"today\", current_date()) \\\n  .withColumn(\"age\", floor(months_between(\"today\", \"birth_date\") / 12)) \\\n  .select(\"birth_date\", \"today\", \"age\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:23+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526217_-1658756571","id":"20210609-193442_1751573959","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:24+0000","dateFinished":"2022-01-24T15:42:25+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109335"},{"title":"Note","text":"%md\n\nSpark implicitly casts `birth_date` or `today` as necessary.\nIt is probably safer to explicitly cast one of these columns before computing the number of months between.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526218_143990124","id":"20210609-193527_367485667","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:26+0000","dateFinished":"2022-01-24T15:42:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109336"},{"text":"%md\n## Working with Boolean columns","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:26+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526219_988584365","id":"20210609-193624_1142002341","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:27+0000","dateFinished":"2022-01-24T15:42:27+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109337"},{"title":"Example 10: Predefining a Boolean column expression","text":"%pyspark\n\n# You can predefine a Boolean column expression:\nstudentFilter = col(\"student\") == 1\ntype(studentFilter)\n\n# You can use the predefined expression to create a new column:\nriders \\\n  .withColumn(\"student_boolean\", studentFilter) \\\n  .select(\"student\", \"student_boolean\") \\\n  .show(5)\n\n# Or filter a DataFrame:\nriders \\\n  .filter(studentFilter) \\\n  .select(\"student\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:28+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526220_-819775621","id":"20210609-193653_1080474595","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:28+0000","dateFinished":"2022-01-24T15:42:29+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109338"},{"title":"Example 11: Working with multiple Boolean column expressions","text":"%pyspark\n\n# Predefine the Boolean column expressions:\nstudentFilter = col(\"student\") == 1\nmaleFilter = col(\"sex\") == \"male\"\n\n# Create a new column using the AND (`&`) operator:\nriders.select(\"student\", \"sex\", studentFilter & maleFilter).show(15)\n\n# Create a new column using the OR (`|`) operator:\nriders.select(\"student\", \"sex\", studentFilter | maleFilter).show(15)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:30+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526221_-403641467","id":"20210609-193801_200688486","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:30+0000","dateFinished":"2022-01-24T15:42:31+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109339"},{"title":"Important","text":"%md\nThe Boolean column expression parser in Spark SQL is not very advanced. \nUse parentheses liberally in your expressions.\n\nNote the difference in how nulls are treated in the computation:\n* true & null = null\n* false & null = false\n* true | null = true\n* false | null = null","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:31+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526221_-1553185133","id":"20210609-193908_880262921","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:32+0000","dateFinished":"2022-01-24T15:42:32+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109340"},{"title":"Example 12: Using multiple Boolean expressions in a filter","text":"%pyspark\n\n# Use `&` for a logical AND:\nriders.filter(maleFilter & studentFilter).select(\"student\", \"sex\").show(5)\n\n# This is equivalent to\nriders.filter(maleFilter).filter(studentFilter).select(\"student\", \"sex\").show(5)\n\n# Use `|` for a logical OR:\nriders.filter(maleFilter | studentFilter).select(\"student\", \"sex\").show(5)\n\n# Be careful with missing (null) values:\nriders.select(\"sex\").distinct().show()\nriders.filter(col(\"sex\") != \"male\").select(\"sex\").distinct().show()","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:32+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526222_1320308481","id":"20210609-194012_1723001284","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:33+0000","dateFinished":"2022-01-24T15:42:35+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109341"},{"text":"%md\n# Lab\n---","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:35+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526223_-1159029032","id":"20210609-150527_79851234","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:36+0000","dateFinished":"2022-01-24T15:42:36+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109342"},{"title":"1 - Extract the hour of day and day of week from `rides.date_time`","text":"%pyspark\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:36+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526225_-1676435836","id":"20210609-194218_1866306834","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109343"},{"title":"2 - Convert `rides.duration` from seconds to minutes","text":"%pyspark\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:37+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526225_1907885742","id":"20210609-194251_1132019973","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109344"},{"title":"3 - Convert `rides.cancelled` to a Boolean column","text":"%pyspark\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:38+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526226_2147018552","id":"20210609-194317_1768281994","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109345"},{"title":"4 - Create an integer column named `five_star_rating` that is 1.0 if the ride # received a five-star rating and 0.0 otherwise","text":"%pyspark\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:38+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526227_648966807","id":"20210609-194402_1894438469","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109346"},{"title":"5 - Create a new column containing the full name for each driver","text":"%pyspark\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:39+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526228_-1032463370","id":"20210609-194416_623145150","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109347"},{"title":"6 - Create a new column containing the average star rating for each driver","text":"%pyspark\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:39+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526229_691118860","id":"20210609-194542_254158313","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109348"},{"title":"7 - Find the rider names that are most similar to `Brian`","text":"%pyspark\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:40+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526230_-1835826675","id":"20210609-194644_1770059886","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109349"},{"title":"Hint","text":"%md\nUse the [Levenshtein](https://en.wikipedia.org/wiki/Levenshtein_distance) function.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:40+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526230_-165006155","id":"20210609-194711_921078796","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:41+0000","dateFinished":"2022-01-24T15:42:41+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109350"},{"text":"%md\n# Result\n**You have now:** become familiar with DataFrames columns transformations.\n\n---","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:41+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526231_-1052533067","id":"20181119-142716_792318228","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:42+0000","dateFinished":"2022-01-24T15:42:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109351"},{"text":"%md\n# Solution\n---","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:42+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526232_-724519459","id":"20171113-155535_1769142099","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:42+0000","dateFinished":"2022-01-24T15:42:42+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109352"},{"title":"1 - Extract the hour of day and day of week from `rides.date_time`","text":"%pyspark\n\nfrom pyspark.sql.functions import hour, dayofweek\nrides \\\n  .withColumn(\"hour_of_day\", hour(\"date_time\")) \\\n  .withColumn(\"day_of_week\", dayofweek(\"date_time\")) \\\n  .select(\"date_time\", \"hour_of_day\", \"day_of_week\") \\\n  .show(5)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:43+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526233_496773868","id":"20210609-195651_1872389407","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:43+0000","dateFinished":"2022-01-24T15:42:44+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109353"},{"title":"2 - Convert `rides.duration` from seconds to minutes","text":"%pyspark\n\nfrom pyspark.sql.functions import col, round\nrides \\\n  .withColumn(\"duration_in_minutes\", round(col(\"duration\") / 60, 1)) \\\n  .select(\"duration\", \"duration_in_minutes\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:45+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526234_1339968032","id":"20210609-195642_138712395","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:45+0000","dateFinished":"2022-01-24T15:42:46+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109354"},{"title":"3 - Convert `rides.cancelled` to a Boolean column","text":"%pyspark\n\n# Using the `cast` method:\nrides \\\n  .withColumn(\"cancelled\", col(\"cancelled\").cast(\"boolean\")) \\\n  .select(\"cancelled\") \\\n  .show(5)\n\n# Using a Boolean expression:\nrides \\\n  .withColumn(\"cancelled\", col(\"cancelled\") == 1) \\\n  .select(\"cancelled\") \\\n  .show(5)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:46+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526235_1879302795","id":"20210609-195631_1606468230","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:47+0000","dateFinished":"2022-01-24T15:42:48+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109355"},{"title":"4 - Create an integer column named `five_star_rating` that is 1.0 if the ride # received a five-star rating and 0.0 otherwise","text":"%pyspark\n\n# Using a Boolean expression and the `cast` method:\nrides \\\n  .withColumn(\"five_star_rating\", (col(\"star_rating\") > 4.5).cast(\"double\")) \\\n  .select(\"star_rating\", \"five_star_rating\") \\\n  .show(10)\n  \n# Using the `when` function and the `when` and `otherwise` methods:\nfrom pyspark.sql.functions import when\nrides \\\n  .withColumn(\"five_star_rating\", when(col(\"star_rating\").isNull(), None).when(col(\"star_rating\") == 5, 1.0).otherwise(0.0)) \\\n  .select(\"star_rating\", \"five_star_rating\") \\\n  .show(10)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:48+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526235_-1510241925","id":"20210609-195622_1467277551","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:49+0000","dateFinished":"2022-01-24T15:42:50+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109356"},{"title":"Note","text":"%md\nBeware of null values when generating new columns.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:50+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526236_-28213979","id":"20210609-195920_987897921","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:52+0000","dateFinished":"2022-01-24T15:42:52+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109357"},{"title":"5 - Create a new column containing the full name for each driver","text":"%pyspark\n\nfrom pyspark.sql.functions import concat_ws\ndrivers \\\n  .withColumn(\"full_name\", concat_ws(\" \", \"first_name\", \"last_name\")) \\\n  .select(\"first_name\", \"last_name\", \"full_name\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:52+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526237_768825662","id":"20210609-195614_1724452243","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:52+0000","dateFinished":"2022-01-24T15:42:53+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109358"},{"title":"6 - Create a new column containing the average star rating for each driver","text":"%pyspark\n\ndrivers \\\n  .withColumn(\"star_rating\", round(col(\"stars\") / col(\"rides\"), 2)) \\\n  .select(\"rides\", \"stars\", \"star_rating\") \\\n  .show(5)","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:54+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526238_-1944601165","id":"20210609-195557_1315209045","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:54+0000","dateFinished":"2022-01-24T15:42:55+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109359"},{"title":"7 - Find the rider names that are most similar to `Brian`","text":"%pyspark\n\nfrom pyspark.sql.functions import lit, levenshtein\nriders \\\n  .select(\"first_name\") \\\n  .distinct() \\\n  .withColumn(\"distance\", levenshtein(col(\"first_name\"), lit(\"Brian\"))) \\\n  .sort(\"distance\") \\\n  .show()","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:56+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526239_-1915829346","id":"20210609-195550_702601164","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:56+0000","dateFinished":"2022-01-24T15:42:57+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109360"},{"title":"References","text":"%md\n* [Spark Python API - pyspark.sql.types module](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql.html#data-types)\n\n* [Spark Python API - pyspark.sql.DataFrame class](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql.html#dataframe-apis)\n\n* [Spark Python API - pyspark.sql.Column class](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql.html#column-apis)\n\n* [Spark Python API - pyspark.sql.functions module](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql.html#functions)\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:57+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526242_-2051060325","id":"20210609-194931_920207158","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:58+0000","dateFinished":"2022-01-24T15:42:58+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109361"},{"title":"Additional resources","text":"%md\nWe hope you've enjoyed this lab. Below are additional resources that you should find useful:\n\n1. [Cloudera Tutorials](http://cloudera.com/tutorials.html) are your natural next step where you can explore Spark in more depth.\n2. [Cloudera Community](https://community.cloudera.com) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Apache Spark Documentation](https://spark.apache.org/documentation.html) - official Spark documentation.\n4. [Apache Zeppelin Project Home Page](https://zeppelin.apache.org) - official Zeppelin web site.","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":10,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526243_-739909236","id":"20181116-135131_93712280","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:42:59+0000","dateFinished":"2022-01-24T15:42:59+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109362"},{"text":"%angular\n</br>\n</br>\n</br>\n</br>\n<center>\n<a href=\"https://www.cloudera.com/about/training/courses.html\">\n  <img src=\"https://www.cloudera.com/content/dam/www/marketing/media-kit/logo-assets/cloudera_logo_darkorange.png\" alt=\"Cloudera University\" style=\"width:280px;height:40px;border:0;\" align=\"middle\">\n</a>\n</center>\n</br>\n</br>","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:42:59+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/undefined","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526244_1442749897","id":"20200110-154537_1406191376","dateCreated":"2022-01-24T15:35:26+0000","dateStarted":"2022-01-24T15:43:00+0000","dateFinished":"2022-01-24T15:43:00+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109363"},{"text":"%angular\n","user":"freynalddeveuwest1","dateUpdated":"2022-01-24T15:43:00+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1643038526245_1533892737","id":"20200110-162013_302547143","dateCreated":"2022-01-24T15:35:26+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:109364"}],"name":"DE/Labs/Pyspark/WorkingWithColumns","id":"2GVB526SM","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"sh:shared_process":[],"livy:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}